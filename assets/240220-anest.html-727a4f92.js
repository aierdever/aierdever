import{_ as e,p as o,q as c,s as n,G as a,t,J as p,n as i}from"./framework-d4dfb5a8.js";const l="/blogs/anest/1.png",u="/blogs/anest/smtz.png",r="/blogs/anest/mzdz1.png",d="/blogs/anest/mzdz2.png",k="/blogs/anest/mzd2.png",m="/blogs/anest/2.png",v={},b=p('<h2 id="整体方案" tabindex="-1"><a class="header-anchor" href="#整体方案" aria-hidden="true">#</a> 整体方案</h2><h3 id="整体布局" tabindex="-1"><a class="header-anchor" href="#整体布局" aria-hidden="true">#</a> 整体布局</h3><p><img src="'+l+'" alt="整体布局"></p><h3 id="相关框架及工具库" tabindex="-1"><a class="header-anchor" href="#相关框架及工具库" aria-hidden="true">#</a> 相关框架及工具库</h3>',4),h=n("li",null,"adsp基础框架",-1),g={href:"https://github.com/vuejs/petite-vue",target:"_blank",rel:"noopener noreferrer"},y={href:"https://ecomfe.github.io/zrender-doc/public/",target:"_blank",rel:"noopener noreferrer"},f={href:"https://handsontable.com/",target:"_blank",rel:"noopener noreferrer"},w=n("li",null,"rollup + typescript +eslint 环境",-1),T=n("li",null,"dayjs",-1),x=p(`<br><h3 id="方案说明" tabindex="-1"><a class="header-anchor" href="#方案说明" aria-hidden="true">#</a> 方案说明</h3><ul><li>整体我们采用adsp的基础框架来实现；</li><li>数据交互和渲染采用 petite-vue；</li><li>麻醉单主体由canvas + html混合实现，基于 zrender.js 二次包装 底层绘图方法 <code>$zr</code> ；</li><li>麻醉单主体单独实现，由rollup打包，amd方式调入页面，执行 <code>.init</code> 方法初始化；</li><li>为了用户灵活方便，也为了好控制用户的时间选择和显示，参考友商，单独实现了一个时间选择器 <code>popTimer</code>；</li><li>框架页和麻醉单页存在数据和事件交互，包装方法，通过指定全局变量实现交互； <ul><li>框架页访问子页面方法： <code>remoteSheet</code>，父页面暴露访问对象： <code>window.mainFarm</code>， mainFarm中主要放的是麻醉单事件和时间修改事件；</li><li>子页面访问框架页方法： <code>remoteMain</code>，子页面暴露访问对象： <code>window.sheetFarm</code>， sheetFarm 中主要放的是麻醉单区域渲染函数和时间修改事件；</li><li>框架页数据对象 <code>window.AStore</code> , 麻醉单页数据对象 <code>window.listStore</code>；</li></ul></li><li>麻醉单事件面板放在框架页中，只有激活的页面为麻醉单页才显示；</li><li>生命体征页 基于 handsontable 实现；</li></ul><br><h2 id="技术实现" tabindex="-1"><a class="header-anchor" href="#技术实现" aria-hidden="true">#</a> 技术实现</h2><h3 id="顶部时间" tabindex="-1"><a class="header-anchor" href="#顶部时间" aria-hidden="true">#</a> 顶部时间</h3><ul><li><p>麻醉单中的所有时间前后台交互都是给的完整的 年月日 时分秒，在前台 format 后显示，全部采用 <code>popTimer</code> 组件设置；</p></li><li><p>顶部的时间只有麻醉开始和结束时间可录入，其他均由其他环节读取进来，时间逻辑判断由后端完成；</p></li><li><p>如果麻醉单已打开，修改了时间需要同步到麻醉单中。</p><br></li></ul><h3 id="右侧生命体征面板" tabindex="-1"><a class="header-anchor" href="#右侧生命体征面板" aria-hidden="true">#</a> 右侧生命体征面板</h3><ul><li>默认收缩不显示；</li><li>数据由手术进行中同步得来，麻醉单关闭，数据源关闭，所以，数据由麻醉单页面发起。</li><li>框架页事件 <code>window.mainFarm.setVitalSigns</code> ，麻醉单中事件 <code>pollingGetVitalSigns</code>。</li></ul><br><h3 id="麻醉单事件面板" tabindex="-1"><a class="header-anchor" href="#麻醉单事件面板" aria-hidden="true">#</a> 麻醉单事件面板</h3><ul><li><p>显示隐藏</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;#tabsC&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">tabs</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token operator">...</span>
    <span class="token function-variable function">onClose</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">title<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>title <span class="token operator">==</span> <span class="token string">&#39;麻醉记录单&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            me<span class="token punctuation">.</span><span class="token function">eventBarHide</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function-variable function">onSelect</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">title<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>title <span class="token operator">==</span> <span class="token string">&#39;麻醉记录单&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            me<span class="token punctuation">.</span><span class="token function">eventBarShow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
            me<span class="token punctuation">.</span><span class="token function">eventBarHide</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token operator">...</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>所有按钮事件放置在 <code>window.mainFarm</code>， 方便全局访问；</p></li><li><p>所有按钮对应的麻醉单事件，除了点击按钮可显示外，在麻醉单中点击对应区域也可以显示。</p></li><li><p>所有麻醉单事件发生后，都需要刷新对应区域的数据。</p><br></li></ul><h3 id="生命体征录入" tabindex="-1"><a class="header-anchor" href="#生命体征录入" aria-hidden="true">#</a> 生命体征录入</h3><p><img src="`+u+'" alt="生命体征录入"> 由 <code>handsontable</code> 实现，特殊业务逻辑包括：</p><ul><li>脉搏会根据需要，显示或隐藏；</li><li>表格列数动态，根据当前时间和手术开始时间计算，3个小时为一周期，最多3个周期；</li><li>单元格根据数据做不同范围限制验证；</li><li>根据起始时间部分字段10分钟录入一次，做奇偶录入限制。</li></ul><br><h3 id="麻醉单" tabindex="-1"><a class="header-anchor" href="#麻醉单" aria-hidden="true">#</a> 麻醉单</h3><p><img src="'+r+'" alt="麻醉单"><img src="'+d+'" alt="麻醉单"></p><h4 id="表单部分" tabindex="-1"><a class="header-anchor" href="#表单部分" aria-hidden="true">#</a> 表单部分</h4><ul><li>主体部分 <code>listStore.form</code> 实时同步，附页部分 <code>listStore.formB</code> 点击按钮保存。</li><li>实时模式 和 只读模式。</li></ul><br><h4 id="主体绘图部分" tabindex="-1"><a class="header-anchor" href="#主体绘图部分" aria-hidden="true">#</a> 主体绘图部分</h4><ul><li>分 面板渲染、药品渲染、出量渲染、标记渲染、实时监控渲染。</li></ul><p>1 / <strong>面板渲染(board)：</strong></p><p>静态部分：网格：点线区域 20×20，药品及数值监测区域 20×25、标尺刻度渲染；</p><p>动态部分： 时间及整点线， 图标符号渲染</p><p>2/ <strong>药品渲染(marking)：</strong> 单次用药 和 连续用药</p><p>3/ <strong>出量渲染(output):</strong> 类似连续用药</p><p>4/ <strong>标识渲染(keyTags)</strong></p><p>5/ <strong>实时监控渲染(pointlines):</strong> 点线渲染 和 数据渲染</p><p><img src="'+k+`" alt="麻醉单"></p><h4 id="主绘图部分具体实现" tabindex="-1"><a class="header-anchor" href="#主绘图部分具体实现" aria-hidden="true">#</a> 主绘图部分具体实现</h4><p>文件路径结构：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">static</span>
 ├── js
 │   ├── app
 │   │   ├── anaestb <span class="token comment">//麻醉单目录</span>
 │   │   │   ├── css
 │   │   │   │   └── anest<span class="token punctuation">.</span>css <span class="token comment">//样式表</span>
 │   │   │   ├── dist <span class="token comment">//产出文件</span>
 │   │   │   │   ├── anaest<span class="token punctuation">.</span>js <span class="token comment">//麻醉单</span>
 │   │   │   │   ├── anaest<span class="token punctuation">.</span>js<span class="token punctuation">.</span>map
 │   │   │   │   ├── recovery<span class="token punctuation">.</span>js <span class="token comment">//复苏单</span>
 │   │   │   │   └── recovery<span class="token punctuation">.</span>js<span class="token punctuation">.</span>map
 │   │   │   ├── images <span class="token comment">//图片文件</span>
 │   │   │   │   ├── d<span class="token punctuation">.</span>png
 │   │   │   │   ├── d2<span class="token punctuation">.</span>png
 │   │   │   │   ├── symbol<span class="token punctuation">.</span>png
 │   │   │   │   └── tag
 │   │   │   ├── node_modules
 │   │   │   ├── <span class="token keyword">package</span><span class="token punctuation">.</span>json
 │   │   │   ├── pnpm<span class="token operator">-</span>lock<span class="token punctuation">.</span>yaml
 │   │   │   ├── rollup<span class="token punctuation">.</span>config<span class="token punctuation">.</span>mjs <span class="token comment">//环境配置</span>
 │   │   │   ├── sheet<span class="token punctuation">.</span>html
 │   │   │   ├── src
 │   │   │   │   ├── api<span class="token punctuation">.</span>ts <span class="token comment">//数据请求</span>
 │   │   │   │   ├── board<span class="token punctuation">.</span>ts  <span class="token comment">//记录单画板基础数据及绘制</span>
 │   │   │   │   ├── boardR<span class="token punctuation">.</span>ts <span class="token comment">//复苏单画板基础数据及绘制</span>
 │   │   │   │   ├── dataType<span class="token punctuation">.</span>ts <span class="token comment">// 请求数据类型</span>
 │   │   │   │   ├── dicts<span class="token punctuation">.</span>ts <span class="token comment">//字典</span>
 │   │   │   │   ├── index<span class="token punctuation">.</span>d<span class="token punctuation">.</span>ts <span class="token comment">//全局自定义注解</span>
 │   │   │   │   ├── keyTags<span class="token punctuation">.</span>ts <span class="token comment">//标记绘画渲染</span>
 │   │   │   │   ├── main_anaest<span class="token punctuation">.</span>ts <span class="token comment">//麻醉单 main入口</span>
 │   │   │   │   ├── main_recovery<span class="token punctuation">.</span>ts <span class="token comment">//复苏单 main入口</span>
 │   │   │   │   ├── marking<span class="token punctuation">.</span>ts <span class="token comment">// 药物记录行渲染</span>
 │   │   │   │   ├── output<span class="token punctuation">.</span>ts <span class="token comment">// 出量渲染</span>
 │   │   │   │   ├── pointlines<span class="token punctuation">.</span>ts <span class="token comment">// 监测数据渲染</span>
 │   │   │   │   ├── recordEvents<span class="token punctuation">.</span>ts <span class="token comment">// 事件渲染</span>
 │   │   │   │   ├── renderData<span class="token punctuation">.</span>ts <span class="token comment">// 数据处理</span>
 │   │   │   │   ├── timeAndPage<span class="token punctuation">.</span>ts <span class="token comment">//重要时间和页码获取处理</span>
 │   │   │   │   ├── tools<span class="token punctuation">.</span>ts <span class="token comment">// 工具函数： $day, $zr, 数据处理,时间转坐标，值转坐标</span>
 │   │   │   │   ├── type<span class="token punctuation">.</span>ts <span class="token comment">//数据类型</span>
 │   │   │   │   └── zrender<span class="token punctuation">.</span>d<span class="token punctuation">.</span>ts <span class="token comment">//zrender 类型注解</span>
 │   │   │   └── tsconfig<span class="token punctuation">.</span>json <span class="token comment">//配置文件</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><br><h4 id="参数" tabindex="-1"><a class="header-anchor" href="#参数" aria-hidden="true">#</a> 参数</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>window<span class="token punctuation">.</span>anestOpt <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">params</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token comment">//用于获取数据</span>
        <span class="token literal-property property">visitNumber</span> <span class="token operator">:</span> <span class="token string">&#39;\${visitNumber}&#39;</span><span class="token punctuation">,</span>  <span class="token comment">//住院号</span>
        <span class="token literal-property property">applyNumber</span> <span class="token operator">:</span> <span class="token string">&#39;\${applyNumber}&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">oprAnesthesiaRecordId</span> <span class="token operator">:</span> <span class="token string">&#39;\${oprAnesthesiaRecordId!}&#39;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">oprTime</span><span class="token operator">:</span> <span class="token string">&#39;\${enterDeptDate!}&#39;</span><span class="token punctuation">,</span> <span class="token comment">//入室时间</span>
    <span class="token literal-property property">anaestEndTime</span><span class="token operator">:</span> <span class="token string">&#39;\${analgesistEndTime}&#39;</span><span class="token punctuation">,</span> <span class="token comment">//麻醉结束时间</span>
    <span class="token literal-property property">leaveDeptDate</span><span class="token operator">:</span> <span class="token string">&#39;\${leaveDeptDate!}&#39;</span><span class="token punctuation">,</span> <span class="token comment">//出手术间时间</span>
    <span class="token literal-property property">inPacuIcuDateTime</span><span class="token operator">:</span> <span class="token string">&#39;\${inPacuIcuTime}&#39;</span><span class="token punctuation">,</span> <span class="token comment">//入icu时间</span>
    <span class="token literal-property property">backWardDateTime</span><span class="token operator">:</span> <span class="token string">&#39;\${backWardTime}&#39;</span><span class="token punctuation">,</span> <span class="token comment">//返回病房时间</span>
    <span class="token literal-property property">cycleTime</span><span class="token operator">:</span> <span class="token number">60000</span><span class="token punctuation">,</span> <span class="token comment">// 循环时间 15s</span>
    <span class="token literal-property property">autoSaveTime</span><span class="token operator">:</span> <span class="token number">30000</span><span class="token punctuation">,</span> <span class="token comment">// 自动保存时间</span>
    <span class="token literal-property property">pulseFlag</span><span class="token operator">:</span> <span class="token string">&#39;\${pulseFlag}&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 是否显示脉搏</span>
    <span class="token literal-property property">isReadonly</span><span class="token operator">:</span> <span class="token string">&#39;\${isReadOnly}&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 是否只读</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><br><h4 id="整体流程" tabindex="-1"><a class="header-anchor" href="#整体流程" aria-hidden="true">#</a> 整体流程</h4><p>1、 根据参数中的时间 得到开始时间、结束时间、手术状态、分页</p><p>2、根据计算出的页数渲染麻醉单页数</p><div class="language-haml line-numbers-mode" data-ext="haml"><pre class="language-haml"><code><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>(page, pageIx) in listStore.pageTimesInfo<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>page.startTime<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>pageOne<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>

...

<span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>3、 初始化画板、初始化 <strong>全局流动参数</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>  baseOpt <span class="token operator">=</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">sheetType</span><span class="token operator">:</span> <span class="token string">&#39;anest&#39;</span><span class="token punctuation">,</span> <span class="token comment">//画板类型</span>
      papers<span class="token punctuation">,</span> <span class="token comment">//画板</span>
      remoteMain<span class="token punctuation">,</span> <span class="token comment">//遥控对象</span>
      <span class="token literal-property property">startTime</span><span class="token operator">:</span> opt<span class="token punctuation">.</span>oprTime<span class="token punctuation">,</span> <span class="token comment">//初始时间</span>
      <span class="token literal-property property">anaestEndTime</span><span class="token operator">:</span> opt<span class="token punctuation">.</span>anaestEndTime <span class="token operator">||</span> opt<span class="token punctuation">.</span>leaveDeptDate<span class="token punctuation">,</span> <span class="token comment">//麻醉结束时间,没有麻醉时间，用出手术间时间，用来终止持续用药</span>
      <span class="token literal-property property">leaveDeptTime</span><span class="token operator">:</span> opt<span class="token punctuation">.</span>leaveDeptDate<span class="token punctuation">,</span> <span class="token comment">//出手术间时间，用于终止输液、出量</span>
      <span class="token literal-property property">markStartTime</span><span class="token operator">:</span> timePages<span class="token punctuation">.</span>markStartTime<span class="token punctuation">,</span> <span class="token comment">//标记开始时间</span>
      endTime<span class="token punctuation">,</span> <span class="token comment">//最终结束时间，用于结束生命体征采集时间</span>
      oping<span class="token punctuation">,</span> <span class="token comment">//是否手术中</span>
      <span class="token literal-property property">pages</span><span class="token operator">:</span> timePages<span class="token punctuation">.</span>pages<span class="token punctuation">,</span> <span class="token comment">//页码和对应页所有数据信息</span>
      <span class="token literal-property property">params</span><span class="token operator">:</span> opt<span class="token punctuation">.</span>params<span class="token punctuation">,</span>
      <span class="token literal-property property">cycleTime</span><span class="token operator">:</span> opt<span class="token punctuation">.</span>cycleTime<span class="token punctuation">,</span>
      <span class="token literal-property property">pulseFlag</span><span class="token operator">:</span> <span class="token punctuation">(</span>opt<span class="token punctuation">.</span>pulseFlag <span class="token operator">*</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token number">0</span> <span class="token operator">|</span> <span class="token number">1</span><span class="token punctuation">,</span>
      <span class="token literal-property property">sheetOffsetTop</span><span class="token operator">:</span> <span class="token operator">-</span><span class="token number">50</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>4、根据数据来源 分区域 获取数据，渲染数据</p><p>5、 循环请求数据</p><p>6、 为页面和父框架页提供刷新勾子函数</p><br><h4 id="数据处理" tabindex="-1"><a class="header-anchor" href="#数据处理" aria-hidden="true">#</a> 数据处理</h4><ul><li>获取数据，整理数据结构</li><li>根据分页中的时间信息，把数据分割提取到具体页面中，放置在 全局流动参数 中。</li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">renderData</span><span class="token punctuation">(</span>baseOpt<span class="token operator">:</span> SheetBaseOpt<span class="token punctuation">,</span> dataType<span class="token operator">:</span> DataType<span class="token punctuation">,</span> <span class="token function-variable function">callback</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>dataType <span class="token operator">==</span> <span class="token string">&#39;marking&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        getData<span class="token punctuation">.</span><span class="token function">marking</span><span class="token punctuation">(</span>baseOpt<span class="token punctuation">,</span> <span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            renderPagesData<span class="token punctuation">.</span><span class="token function">marking</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> baseOpt<span class="token punctuation">)</span><span class="token punctuation">;</span>
            callback <span class="token operator">&amp;&amp;</span> <span class="token function">callback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>dataType <span class="token operator">==</span> <span class="token string">&#39;output&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        getData<span class="token punctuation">.</span><span class="token function">output</span><span class="token punctuation">(</span>baseOpt<span class="token punctuation">,</span> <span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            renderPagesData<span class="token punctuation">.</span><span class="token function">output</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> baseOpt<span class="token punctuation">)</span><span class="token punctuation">;</span>
            callback <span class="token operator">&amp;&amp;</span> <span class="token function">callback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>dataType <span class="token operator">==</span> <span class="token string">&#39;tags&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        getData<span class="token punctuation">.</span><span class="token function">tags</span><span class="token punctuation">(</span>baseOpt<span class="token punctuation">,</span> <span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            renderPagesData<span class="token punctuation">.</span><span class="token function">tags</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> baseOpt<span class="token punctuation">)</span><span class="token punctuation">;</span>
            callback <span class="token operator">&amp;&amp;</span> <span class="token function">callback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>dataType <span class="token operator">==</span> <span class="token string">&#39;pointlines&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        getData<span class="token punctuation">.</span><span class="token function">pointlines</span><span class="token punctuation">(</span>baseOpt<span class="token punctuation">,</span> <span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            renderPagesData<span class="token punctuation">.</span><span class="token function">pointlines</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> baseOpt<span class="token punctuation">)</span><span class="token punctuation">;</span>
            callback <span class="token operator">&amp;&amp;</span> <span class="token function">callback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="处理后合并到baseopt的数据" tabindex="-1"><a class="header-anchor" href="#处理后合并到baseopt的数据" aria-hidden="true">#</a> 处理后合并到baseOpt的数据</h5><p><img src="`+m+`" alt="处理后合并到baseOpt的数据"></p><br><h4 id="业务难点" tabindex="-1"><a class="header-anchor" href="#业务难点" aria-hidden="true">#</a> 业务难点</h4><ul><li>表单部分数据实时同步，最早是实时保存，在多台终端同时打开时会造成数据错误，现在改成1分钟自动读取，修改实时保存。</li><li>时间对渲染页数的影响，最多9个小时，3页；</li><li>各个时间对渲染的控制要求，用户要求能提前录入数据；</li><li>呼吸，机械通气的介入，需要连贯渲染；</li><li>多页时，每页数据的控制显示，持续用药多页连贯性显示；</li><li>录入点可拖动修改。</li></ul><br><h4 id="技术细节" tabindex="-1"><a class="header-anchor" href="#技术细节" aria-hidden="true">#</a> 技术细节</h4><ul><li>多页时表单数据操作同步</li><li>时间的计算，时间转换为坐标，值转换为坐标，坐标转换为值</li><li>点线图标的描绘</li><li>持续用药的显示分解</li></ul><br><h4 id="几个重要函数说明" tabindex="-1"><a class="header-anchor" href="#几个重要函数说明" aria-hidden="true">#</a> 几个重要函数说明</h4><h5 id="tools-ts" tabindex="-1"><a class="header-anchor" href="#tools-ts" aria-hidden="true">#</a> tools.ts</h5><ul><li><code>$zr.points</code>： 画点</li><li><code>$zr.marking</code>： 画药品标识线</li><li><code>renderPos</code>： 根据数据渲染坐标</li><li><code>updatePointPos</code>： 更新点坐标及数据</li><li><code>getTimePxByTimeStr</code>： 根据时间字符串计算时间差</li><li><code>timeTo5Times</code>： 将时间转为 5的整数倍</li><li><code>$day工具</code>： 增强判断时间范围</li></ul><h5 id="timeandpage-ts" tabindex="-1"><a class="header-anchor" href="#timeandpage-ts" aria-hidden="true">#</a> timeAndPage.ts</h5><ul><li><code>getEndTime</code>： 获取手术状态和结束时间</li><li><code>timeAndPage</code>： 获取手术重要节点时间和初始化页数据</li></ul><h5 id="renderdata-ts" tabindex="-1"><a class="header-anchor" href="#renderdata-ts" aria-hidden="true">#</a> renderData.ts</h5><ul><li><code>getData</code>： 获取并整理数据</li><li><code>renderPagesData</code>： 根据分页时间和分类数据，获取每个分页时间段内的数据</li><li><code>paperMouseFn</code>： 画板按坐标区域范围绑定双击事件</li></ul><h5 id="pointlines-ts" tabindex="-1"><a class="header-anchor" href="#pointlines-ts" aria-hidden="true">#</a> pointlines.ts</h5><ul><li><code>page.plUnit</code>对象： 监测数据类别对象</li><li><code>initPointE</code>, <code>setShadowPos</code>： 影子圆点初始化及位置设置</li><li><code>drawPoints</code>： 画点</li><li><code>drawLine</code>： 画线</li><li><code>drawTxts</code>： 绘制监控文字</li><li><code>drawBreateUnit</code>, <code>filterUnderCotrolData</code>,<code>drawUnitsPre</code>： 针对控制呼吸(机械通气)画点线的特殊处理</li><li><code>saveDataByPoint</code>： 移动点，释放坐标后，提交保存新的坐标值</li><li><code>getTimeSeries</code>： 获取时间刻度，用来过滤哪些点需要渲染</li></ul><h2 id="附录" tabindex="-1"><a class="header-anchor" href="#附录" aria-hidden="true">#</a> 附录</h2><h4 id="remotesheet-函数" tabindex="-1"><a class="header-anchor" href="#remotesheet-函数" aria-hidden="true">#</a> remoteSheet 函数</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//访问麻醉单页面属性和事件</span>
<span class="token keyword">const</span> remoteSheet <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token comment">//访问麻醉单</span>
    <span class="token function">get</span><span class="token punctuation">(</span>attr<span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment">//获取值，只支持数组和字符串</span>
        <span class="token keyword">var</span> $iframe <span class="token operator">=</span> window<span class="token punctuation">.</span>frames<span class="token punctuation">[</span><span class="token string">&quot;iframeAnest&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>$iframe<span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">const</span> farm <span class="token operator">=</span> $iframe<span class="token punctuation">.</span>sheetFarm<span class="token punctuation">;</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>attr <span class="token keyword">instanceof</span> <span class="token class-name">Array</span><span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment">//数组</span>
                <span class="token keyword">const</span> r <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
                attr<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                    r<span class="token punctuation">[</span>item<span class="token punctuation">]</span> <span class="token operator">=</span> farm<span class="token punctuation">[</span>item<span class="token punctuation">]</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span> r<span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span> <span class="token comment">//字符串</span>
                <span class="token keyword">return</span> farm<span class="token punctuation">[</span>attr<span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function">run</span><span class="token punctuation">(</span><span class="token parameter">fnName<span class="token punctuation">,</span> <span class="token operator">...</span>opt</span><span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment">//执行函数</span>
        <span class="token keyword">var</span> $iframe <span class="token operator">=</span> window<span class="token punctuation">.</span>frames<span class="token punctuation">[</span><span class="token string">&quot;iframeAnest&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>$iframe<span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">let</span> fn <span class="token operator">=</span> $iframe<span class="token punctuation">.</span>sheetFarm <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
            <span class="token keyword">const</span> fnNames <span class="token operator">=</span> fnName<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            $<span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span>fnNames<span class="token punctuation">,</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">i<span class="token punctuation">,</span>v</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span>fn<span class="token punctuation">[</span>v<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                    fn <span class="token operator">=</span> fn<span class="token punctuation">[</span>v<span class="token punctuation">]</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
                    fn <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
                    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>fn<span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token operator">...</span>opt<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;无法运行：子页面farm.&#39;</span><span class="token operator">+</span> fnName <span class="token operator">+</span> <span class="token string">&#39;函数&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>


<span class="token comment">// 使用示例：</span>
remoteSheet<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token string">&#39;setOprTime&#39;</span><span class="token punctuation">,</span>idName<span class="token punctuation">,</span>time<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 调用麻醉单sheetFarm中的setOprTime方法</span>
remoteSheet<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token string">&#39;refresh.marking&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//调用麻醉单sheetFarm中 refresh的marking方法</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="remotemain-函数" tabindex="-1"><a class="header-anchor" href="#remotemain-函数" aria-hidden="true">#</a> remoteMain 函数</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 访问父级主页面属性和事件</span>
<span class="token keyword">const</span> remoteMain <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token function">get</span><span class="token punctuation">(</span>attr<span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment">//获取值，只支持数组和字符串</span>
        <span class="token keyword">const</span> p <span class="token operator">=</span> window<span class="token punctuation">.</span>parent<span class="token punctuation">;</span>
        <span class="token keyword">const</span> farm <span class="token operator">=</span> p<span class="token punctuation">.</span>mainFarm<span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>attr <span class="token keyword">instanceof</span> <span class="token class-name">Array</span><span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment">//数组</span>
            <span class="token keyword">const</span> r <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
            attr<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                r<span class="token punctuation">[</span>item<span class="token punctuation">]</span> <span class="token operator">=</span> farm<span class="token punctuation">[</span>item<span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> r<span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span> <span class="token comment">//字符串</span>
            <span class="token keyword">return</span> farm<span class="token punctuation">[</span>attr<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function">run</span><span class="token punctuation">(</span><span class="token parameter">fnName<span class="token punctuation">,</span> <span class="token operator">...</span>opt</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">const</span> p <span class="token operator">=</span> window<span class="token punctuation">.</span>parent<span class="token punctuation">;</span>
        <span class="token comment">// const farm = p.mainFarm;</span>
        <span class="token keyword">const</span> fnNames <span class="token operator">=</span> fnName<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> fn <span class="token operator">=</span> p<span class="token punctuation">.</span>mainFarm <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
        $<span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span>fnNames<span class="token punctuation">,</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">i<span class="token punctuation">,</span>v</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
           <span class="token keyword">if</span><span class="token punctuation">(</span>fn<span class="token punctuation">[</span>v<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
               fn <span class="token operator">=</span> fn<span class="token punctuation">[</span>v<span class="token punctuation">]</span><span class="token punctuation">;</span>
           <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
               fn <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
               <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
           <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// console.log(&#39;运行子页面函数：&#39;,fnNames,fn);</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>fn<span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token operator">...</span>opt<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;无法运行：父级farm.&#39;</span><span class="token operator">+</span> fnName <span class="token operator">+</span> <span class="token string">&#39;函数&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">//使用示例：</span>
remoteMain<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token string">&#39;asyncAnesthesiaMode&#39;</span><span class="token punctuation">,</span>txt<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//调用父框架页中mainFarm的asyncAnesthesiaMode方法</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><br><h4 id="麻醉单基础opt" tabindex="-1"><a class="header-anchor" href="#麻醉单基础opt" aria-hidden="true">#</a> 麻醉单基础opt</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>  window<span class="token punctuation">.</span>anestOpt <span class="token operator">=</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">params</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token literal-property property">visitNumber</span> <span class="token operator">:</span> <span class="token string">&#39;\${visitNumber}&#39;</span><span class="token punctuation">,</span>
          <span class="token literal-property property">applyNumber</span> <span class="token operator">:</span> <span class="token string">&#39;\${applyNumber}&#39;</span><span class="token punctuation">,</span>
          <span class="token literal-property property">oprAnesthesiaRecordId</span> <span class="token operator">:</span> <span class="token string">&#39;\${oprAnesthesiaRecordId!}&#39;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token literal-property property">anaestEndTime</span><span class="token operator">:</span> <span class="token string">&#39;\${analgesistEndTime}&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">oprTime</span><span class="token operator">:</span> <span class="token string">&#39;\${enterDeptDate!}&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">leaveDeptDate</span><span class="token operator">:</span> <span class="token string">&#39;\${leaveDeptDate!}&#39;</span><span class="token punctuation">,</span> <span class="token comment">//出手术间时间</span>
      <span class="token punctuation">[</span>#<span class="token operator">--</span>endTime<span class="token operator">:</span> <span class="token string">&#39;\${leaveDeptDate}&#39;</span><span class="token punctuation">,</span> <span class="token comment">//出手术间时间--]</span>
      <span class="token literal-property property">inPacuIcuDateTime</span><span class="token operator">:</span> <span class="token string">&#39;\${inPacuIcuTime}&#39;</span><span class="token punctuation">,</span> <span class="token comment">//入icu时间</span>
      <span class="token literal-property property">backWardDateTime</span><span class="token operator">:</span> <span class="token string">&#39;\${backWardTime}&#39;</span><span class="token punctuation">,</span> <span class="token comment">//返回病房时间</span>
      <span class="token literal-property property">cycleTime</span><span class="token operator">:</span> <span class="token number">60000</span><span class="token punctuation">,</span> <span class="token comment">// 循环时间 15s</span>
      <span class="token literal-property property">autoSaveTime</span><span class="token operator">:</span> <span class="token number">30000</span><span class="token punctuation">,</span> <span class="token comment">// 自动保存时间</span>
      <span class="token literal-property property">pulseFlag</span><span class="token operator">:</span> <span class="token string">&#39;\${pulseFlag}&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">isReadonly</span><span class="token operator">:</span> <span class="token string">&#39;\${isReadOnly}&#39;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,77);function _(D,$){const s=i("ExternalLinkIcon");return o(),c("div",null,[b,n("ul",null,[h,n("li",null,[n("a",g,[a("petite-vue"),t(s)])]),n("li",null,[n("a",y,[a("zrender"),t(s)])]),n("li",null,[n("a",f,[a("handsontable"),t(s)])]),w,T]),x])}const N=e(v,[["render",_],["__file","240220-anest.html.vue"]]);export{N as default};
